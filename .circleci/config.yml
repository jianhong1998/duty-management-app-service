version: 2.1
orbs:
    node: circleci/node@5.0.2
    aws-ecs: circleci/aws-ecs@2.2.1
    aws-ecr: circleci/aws-ecr@7.0.0
    aws-cli: circleci/aws-cli@1.3
    slack: circleci/slack@4.4.3

commands:
    set_version:
        steps:
            - run:
                  command: |
                      if [ -z "$CIRCLE_TAG" ]
                      then
                        export CODE_VERSION="${CIRCLE_BRANCH}_${CIRCLE_SHA1}"
                      else
                        export CODE_VERSION="$CIRCLE_TAG"
                      fi;
                      echo "$CODE_VERSION" >> version_file.txt

# Define the jobs we want to run for this project
jobs:
    unit-test:
        executor:
            name: node/default
        resource_class: medium
        steps:
            - checkout
            - node/install-packages
            - run: npm run lint
            - set_version
            - run:
                  name: Unit Tests
                  command: |
                      npm test -- --runInBand
                  environment:
                      NODE_OPTIONS: --max_old_space_size=4096
            - run:
                  command: |
                      echo "`cat version_file.txt`"

    build-and-push:
        docker:
            - image: 'cimg/python:3.9.1'
        resource_class: medium
        steps:
            - checkout
            - setup_remote_docker:
                  docker_layer_caching: false
            - set_version
            - aws-ecr/build-and-push-image:
                  account-url: AWS_ACCOUNT_URL
                  aws-access-key-id: AWS_SECRET_KEY_ID
                  aws-secret-access-key: AWS_SECRET_KEY
                  region: AWS_REGION
                  repo: duty-management-app-ecr
                  tag: $(cat version_file.txt)
                  extra-build-args: '--build-arg CODE_VERSION=$(cat version_file.txt)'

    deploy-to-dev:
        docker:
            - image: 'cimg/python:3.9.1'
        resource_class: medium
        steps:
            - setup_remote_docker:
                  docker_layer_caching: false
            - aws-cli/setup:
                  aws-access-key-id: AWS_SECRET_KEY_ID
                  aws-region: AWS_REGION
                  aws-secret-access-key: AWS_SECRET_KEY
            - set_version
            - aws-ecs/update-service:
                  cluster-name: 'dutySimple-staging-ecs'
                  family: 'dutySimple-staging-task-defination'
                  service-name: 'dutySimple-staging-service-3'
                  verify-revision-is-deployed: true
                  container-image-name-updates: 'container=dutySimple-staging-container,tag=$(cat version_file.txt)'

# Orchestrate our job run sequence
workflows:
    build-test-deploy:
        jobs:
            - unit-test:
                  filters:
                      branches:
                          only: /.*/
                      tags:
                          only: /.*/
                  context: slack-secrets
            - approval-deploy-to-dev:
                  type: approval
                  requires:
                      - unit-test
                  filters:
                      branches:
                          only:
                              - staging
                              - main
                      tags:
                          only: /.*/
                  context: slack-secrets
            - build-and-push:
                  requires:
                      - approval-deploy-to-dev
                  filters:
                      branches:
                          only:
                              - staging
                              - main
                      tags:
                          only: /.*/
                  context: slack-secrets
            - deploy-to-dev:
                  requires:
                      - build-and-push
                  filters:
                      branches:
                          only:
                              - staging
                              - main
                      tags:
                          only: /.*/
                  context: slack-secrets
